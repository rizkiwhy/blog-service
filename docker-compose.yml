services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      GOMODCACHE: ${SERVICE_GOMODCACHE_PATH_DOCKER}
      GOCACHE: ${SERVICE_GOCACHE_PATH_DOCKER}
      MYSQL_HOST: ${MYSQL_HOST_DOCKER}
      MYSQL_PORT: ${MYSQL_PORT_DOCKER}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE_NAME: ${MYSQL_DATABASE_NAME}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SERVICE_PORT: ${SERVICE_PORT}
    env_file:
      - .env
    volumes:
      - "${SERVICE_VOLUME_PATH}:${SERVICE_VOLUME_PATH_DOCKER}"
    ports:
      - "${SERVICE_PORT}:${SERVICE_PORT_DOCKER}"
    depends_on:
      - db
    networks:
      - mynetwork

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
    volumes:
      - "${MYSQL_VOLUME_PATH}:${MYSQL_VOLUME_PATH_DOCKER}"
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT_DOCKER}"
    networks:
      - mynetwork
  
  redis:
    image: redis:latest
    environment:
      REDIS_PASSWORD: mysecretpassword  # Set the Redis password
    ports:
      - "6380:6379"  # Expose Redis on port 6379
    networks:
      - mynetwork
    volumes:
      - redis-data:/data  # Optional: Persist Redis data

volumes:
  mysql-data:
  redis-data:

networks:
  mynetwork: